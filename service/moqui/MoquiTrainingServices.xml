<?xml version="1.0" encoding="UTF-8" ?>
<services xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://moqui.org/xsd/service-definition-2.1.xsd">
  <service verb="create" noun="TestProduct" type="entity-auto">
    <in-parameters>
      <auto-parameters entity-name="moqui.tutorial.TestProduct" include="nonpk"/>
      <parameter name="productName" required="true"/>
    </in-parameters>
    <out-parameters>
      <parameter name="productId"/>
    </out-parameters>
  </service>
  
  <service verb="create" noun="ProductService">
    <in-parameters>
      <auto-parameters entity-name="moqui.tutorial.TestProduct" include="nonpk"/>
      <parameter name="productName" required="true"/>
    </in-parameters>
    <out-parameters>
      <parameter name="productId"/>
    </out-parameters>
    <actions>
      <service-call name="create#moqui.tutorial.TestProduct" in-map="context" out-map="context"/>
    </actions>
  </service>
  
  <service verb="create" noun="TestProductService" type="script"
           location="component://moqui-assigment/script/org/MoquiServices.xml">
    <in-parameters>
      <auto-parameters entity-name="moqui.tutorial.TestProduct" include="nonpk"/>
      <parameter name="productName" required="true"/>
    </in-parameters>
    <out-parameters>
      <parameter name="productId"/>
    </out-parameters>
  </service>
  
  <service verb="create" noun="ProductRecordService" type="script"
           location="component://moqui-assigment/src/main/groovy/moqui/MoquiTrainingScript.groovy">
    <in-parameters>
      <auto-parameters entity-name="moqui.tutorial.TestProduct" include="nonpk"/>
      <parameter name="productName" required="true"/>
    </in-parameters>
    <out-parameters>
      <parameter name="productId"/>
    </out-parameters>
  </service>
  
  <service verb="find" noun="TestProduct">
    <in-parameters>
      <parameter name = "productId" required="false"/>
      <parameter name="productName" required="false"/>
    </in-parameters>
    <out-parameters>
      <parameter name="testProductList" type="List">
        <parameter name = "testProductMap" type="Map">
          <parameter name = "productId"/>
          <parameter name = "productName"/>
          <parameter name = "description"/>
        </parameter>
      </parameter>
    </out-parameters>
    <actions>
      <entity-find entity-name = "moqui.tutorial.TestProduct" list="testProductList">
        <econditions combine="or">
          <econdition field-name = "productId" ignore-if-empty="true"/>
          <econdition field-name = "productName" operator="like" value="%${productName}%" ignore-case="true" ignore-if-empty="true"/>
        </econditions>
        <select-field field-name = "productId,productName,description"/>
      </entity-find>
    </actions>
  </service>
  
</services>